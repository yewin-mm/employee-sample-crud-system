#============================================== App Config ==============================================#
#port 8080 is default and you can change as you want, but if you change the port, you need to change your given port in your api request too. eg. if you change port to 8082, api link will be localhost:8082
server.port=8081
#we can add application path by adding "server.servlet.context-path=/studentCRUD" (that will as you want path) in properties. and if so, you need to add your given path follow after port in api request link too. eg. localhost:8080/studentCRUD/getAllStudent
server.servlet.context-path=/employeeCRUD

#============================================== DB Config ==============================================#
# add connection string link to connect database
spring.datasource.url=jdbc:mysql://localhost:3306/employee_crud
# connect db with username and password
spring.datasource.username=root
spring.datasource.password=root

# add driver (if you use mysql 5, you need to remove `cj` in below driver)
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# add mysql driver, in there, your installed mysql db is 5, you need to add 5 dialect.
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.format_sql=true
#spring.jpa.show-sql=false
# set update strategy in database operation for new table, column, etc.
spring.jpa.hibernate.ddl-auto=update

#============================================== Connection pool Configs ==============================================#
# Here we can use hikari for connection pooling. Connection pooling is to control concurrent request at the same time and to get good performance when touching to db and etc.
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.auto-commit=true